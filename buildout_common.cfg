[buildout]

extensions = mr.developer buildout.dumppickedversions
environment-vars = PYTHON_EGG_CACHE ${buildout:directory}.python-eggs
find-links += 
    http://adhocracy-buildout.cs.uni-duesseldorf.de/mirrors/dist.plone.org/thirdparty/
    http://dist.plone.org/thirdparty
    http://initd.org/pub/software/psycopg/
extends = versions.cfg
versions = versions
eggs = 
    Spawning
    pysqlite
    psycopg2
#    lxml == 2.3.6
    WSGIRewrite
    diazo [wsgi]
    PILwoTK == 1.1.6.4
    adhocracy 
    adhocracy.wordpressbasic_theme
    BeautifulSoup
    fanstatic
    ipdb
    js.jquery_joyride
    Paste
    PasteDeploy
    geoalchemy
    geojson

# checkout adhocracy packages to ./src
auto-checkout = *

# parts in this buildout file to be installed    
parts =
    env
    grp
    lxml
    ncurses
    readline
    geos
    proj
#    gdal
    postgresql
    postgis
    postgresql-symlinks
    cython-src
    cython-install
    shapely
    paster
    adhocracy_switch_revision_number
    adhocpy
    adhocracy_conf
    adhocracy_setup
    omelette
    vhost_conf
    sysv_conf
    supervisor
#    mapnik

index = http://adhocracy-buildout.cs.uni-duesseldorf.de/eggproxy/

##############################################################################  
# System Settings
##############################################################################  

[domains]
main = adhocracy.lan
main.force_port =
#The adhocracy diazo theme can merge content from this backend wordpress blog.
#The linked html page has to deliver proper xhtml content (<?xml encoding="utf-8"> ..)!!!
blog = 
solr = localhost
rabbitmq = localhost

[paths]
apache_conf = /etc/apache2
apache_log = /var/log/apache2

[user]
adhocracy_user = ${env:USER}
adhocracy_group = ${grp:GROUP}

[adhocracy]
#start adhocracy in debug mode
debug = False
protocol = http
host = 127.0.0.1
#Replace this with a randomly generated hash value:
secret = DGK23234324234019357FFFFFFsecret
#Adhocracy email from:
email.from = mail@adhocracy.cc
#Error emails:
email.to = 
smtp_server = localhost
smtp_port = 25
#Database connection
sqlalchemy.url = sqlite:///${buildout:directory}/var/development.db
#sqlalchemy.url = postgres://nutzer:passwort@localhost/20101128 
#Site name for all instances, part of the html <title>, notification E-Mails etc
site.name = Adhocracy
language = de_DE

[twitter]
username = 
key = 
secret = 
consumer_key = 
consumer_secret = 
#Full path to a twitter profile, e.g. http://twitter.com/liqd_de
profile_url =
 
##############################################################################  
# Versions and ports of all servers
##############################################################################

[adhocracy_code]
branch = develop
diazo_theme_rules_dir = ${buildout:directory}/src/adhocracy.wordpressbasic_theme/adhocracy/wordpressbasic_theme

[sources]
adhocracy = git https://github.com/liqd/adhocracy branch=${adhocracy_code:branch}
adhocracy.wordpressbasic_theme = git https://github.com/liqd/adhocracy.wordpressbasic_theme
adhocracy.adhocracy_theme = git https://github.com/liqd/adhocracy.adhocracy_theme
js.socialshareprivacy = hg https://bitbucket.org/csenger/js.socialshareprivacy
js.jquery_joyride = hg https://bitbucket.org/csenger/js.jquery_joyride

[ports]
main = 5001
memcached = 5005 
#WARNING rabbitmq also starts epmd (0.0.0.0:4369) and beam.smp on various ports
rabbitmq =  5006
rabbitmq_nodename = bunny1
solr =  5007
supervisor = 5010
postgres = 5008

[urls]
rabbitmq = http://www.rabbitmq.com/releases/rabbitmq-server/v2.5.1/rabbitmq-server-2.5.1.tar.gz
solr = http://mirror.softaculous.com/apache/lucene/solr/3.6.1/apache-solr-3.6.1.tgz
libevent = http://www.monkey.org/~provos/libevent-1.4.8-stable.tar.gz
mapnik = https://github.com/downloads/mapnik/mapnik/mapnik-v2.0.1.tar.bz2
memcached = http://memcached.googlecode.com/files/memcached-1.4.15.tar.gz

##############################################################################  
# Setup adhocracy and python dependencies
##############################################################################

[mapnik]
recipe = hexagonit.recipe.cmmi
url = ${urls:mapnik}
configure-options =
    PREFIX = ${buildout:directory}/parts/mapnik


#get current user
[env]
recipe = gocept.recipe.env

#get current user group 
[grp]
recipe = collective.recipe.grp

[adhocracy_switch_revision_number]
recipe = plone.recipe.command
stop-on-error = true
command = 
    [ -f src/adhocracy/setup.py ] && cd src/adhocracy && git pull

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml == 2.3.6
libxslt-url = ftp://xmlsoft.org/libxslt/libxslt-1.1.26.tar.gz
libxml2-url = ftp://xmlsoft.org/libxslt/libxml2-2.8.0.tar.gz

#install paster to set up adhocracy
[paster]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    PasteScript
    PasteDeploy
entry-points = paster=paste.script.command:run 
initialization =
    import paste.script.command
    paste.script.command.system_plugins.append('adhocracy') 

# python with all required eggs 
[adhocpy]   
recipe = zc.recipe.egg
eggs =  ${buildout:eggs}
interpreter = adhocpy
scripts = adhocpy

# unified directory structure of installed eggs
[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${buildout:eggs} 
    supervisor 

# generate the adhocracy config file
[adhocracy_conf] 
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/etc/adhocracy.ini.in
output = ${buildout:directory}/etc/adhocracy.ini

#set up adhocracy (TODO: this should be an entry point)
[adhocracy_setup] 
recipe = plone.recipe.command
command = 
    chmod -R g+rw var/data
    bin/paster setup-app ${buildout:directory}/etc/adhocracy.ini --name=content 
    ln -s parts/omelette installed_eggs

##############################################################################  
# Servers to run adhocracy
##############################################################################

[solr_download]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
ignore-existing = true
url = ${urls:solr}

[solr]
recipe = collective.recipe.solrinstance
solr-location = ${solr_download:location}
host = ${domains:solr}
port = ${ports:solr}
max-num-results = 500
#we use a static config file, there is nothing auto generated...
schema-template = ${buildout:directory}/src/adhocracy/solr/schema.xml
unique-key = id
index =
    name:id type:string indexed:true stored:true required:true
filter =
#    text solr.LowerCaseFilterFactory

[rabbitmq]
recipe = rod.recipe.rabbitmq
url = ${urls:rabbitmq}

[rabbitmq_conf]
recipe = collective.recipe.template      
input = ${buildout:directory}/etc/rabbitmq-env.conf.in
output = ${buildout:directory}/etc/rabbitmq-env.conf
 
[libevent]
recipe = zc.recipe.cmmi
url = ${urls:libevent}

[memcached]
recipe = zc.recipe.cmmi
url = ${urls:memcached}
extra_options = --with-libevent=${libevent:location}

[memcached_setup]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/memcached
mode = 0755
content =
 #!/bin/sh
 PIDFILE=${memcached:location}/memcached.pid
    case "$1" in
      start)
       ${memcached:location}/bin/memcached -l 127.0.0.1 -p ${ports:memcached} -d -P $PIDFILE
        ;;
      stop)
        kill `cat $PIDFILE`
        ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac

[ncurses]
recipe = hexagonit.recipe.cmmi
url = ftp://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.9.tar.gz
md5sum = 8cb9c412e5f2d96bc6f459aa8c6282a1
configure-options =
  --with-shared
  --without-normal
  --without-debug

[readline]
recipe = hexagonit.recipe.cmmi
url = http://ftp.gnu.org/gnu/readline/readline-6.2.tar.gz
configure-options =
    --with-curses
    --with-libs="${ncurses:location}/lib"
    --with-includes="${ncurses:location}/include/ncurses"

[postgresql]
recipe = hexagonit.recipe.cmmi
url = http://ftp.postgresql.org/pub/source/v9.2.1/postgresql-9.2.1.tar.bz2
ignore-existing = true
configure-options =
#    --prefix=${buildout:directory}
    --with-readline
    --enable-thread-safety
    --with-libs="${readline:location}/lib ${ncurses:location}/lib"
    --with-includes="${readline:location}/include ${ncurses:location}/include"
    --with-pgport=${ports:postgres}
make-targets = install-world

[postgresql-symlinks]
recipe = cns.recipe.symlink
symlink_target = ${buildout:directory}/bin
symlink_base = ${postgresql:location}/bin
symlink =
    clusterdb
    createuser
    dropuser
    pg_config
    pg_dump
    pg_restore
    psql
    createdb
    dropdb
    ecpg
    pg_controldata
    pg_dumpall
    postgres
    reindexdb
    createlang
    droplang
    initdb
    pg_ctl
    pg_resetxlog
    postmaster
    vacuumdb

[proj]
recipe = zc.recipe.cmmi
url = http://download.osgeo.org/proj/proj-4.8.0.tar.gz

[geos]
recipe = zc.recipe.cmmi
url = http://download.osgeo.org/geos/geos-3.3.6.tar.bz2

# gdal is needed if postgis is compiled --with-raster
[gdal]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/gdal/gdal-1.9.2.tar.gz
configure-options =
    CFLAGS=-I${geos:location}/include
    LDFLAGS=-L${geos:location}/lib
    --with-geos=${geos:location}/bin/geos-config
    --with-python
  
[postgis]
recipe = zc.recipe.cmmi
url = http://download.osgeo.org/postgis/source/postgis-2.0.2.tar.gz
keep-compile-dir = true
extra_options =
#    --prefix=${postgresql:location}
    --with-pgconfig=${postgresql:location}/bin/pg_config
    --with-geosconfig=${geos:location}/bin/geos-config
    --with-projdir=${proj:location}
    --with-xml2config=${lxml:location}/libxml2/bin/xml2-config
    --without-raster

[cython-src]
recipe = hexagonit.recipe.download
url = http://pypi.python.org/packages/source/C/Cython/Cython-0.17.1.tar.gz

[cython-install]
recipe = z3c.recipe.egg:setup
setup = ${cython-src:location}/Cython-0.17.1
args =
    clean
    build
    install

#[shapely]
#recipe = zc.recipe.egg:custom
#egg = shapely
#include-dirs = ${buildout:directory}/include
#library-dirs = ${buildout:directory}/lib
#rpath = ${buildout:directory}/lib
#libraries = geos

# workaround as the above or usage of mr.developer and other recipies don't find geos_c.h
[shapely]
recipe = plone.recipe.command
stop-on-error = false
command = 
    cd ${buildout:directory}/src
    git clone https://github.com/sgillies/shapely
    cd shapely
    CFLAGS=-I${buildout:directory}/parts/geos/include LDFLAGS=-L${buildout:directory}/parts/geos/lib pip install .
update-command =
    cd ${buildout:directory}/src/shapely
    git pull
    pip install .

##############################################################################  
# Set up apache2 vhost
##############################################################################

[vhost_conf] 
recipe = collective.recipe.template      
input = ${buildout:directory}/etc/vhost.conf.in
output = ${buildout:directory}/etc/vhost.conf

##############################################################################  
# Set up SysV init script
##############################################################################

[sysv_conf] 
recipe = collective.recipe.template      
input = ${buildout:directory}/etc/sysv-init.in
output = ${buildout:directory}/etc/sysv-init

##############################################################################  
# Set up supervisor to run it all
##############################################################################

[supervisor]
recipe = collective.recipe.supervisor
port = 127.0.0.1:${ports:supervisor}
user = super
password = Xld)0_+e1
pp = ${buildout:directory}/parts/omelette/supervisor/pidproxy.py
programs =
    0 postgresql (environment=LD_LIBRARY_PATH="${geos:location}/lib:${proj:location}/lib") ${buildout:directory}/bin/postgres [-D ${buildout:directory}/var/postgresql/data]
    10 rabbitmq ${buildout:directory}/bin/rabbitmq-server                 
    20 memcached ${memcached:location}/bin/memcached [-l 127.0.0.1 -p ${ports:memcached} -U ${ports:memcached}] 
    30 solr ${buildout:directory}/bin/solr-instance [fg]
    40 adhocracy_background ${buildout:directory}/bin/paster [--plugin=adhocracy background -c ${buildout:directory}/etc/adhocracy.ini]
    45 adhocracy (environment=LD_LIBRARY_PATH="${geos:location}/lib") ${buildout:directory}/bin/paster [serve ${buildout:directory}/etc/adhocracy.ini]
