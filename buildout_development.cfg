##############################################################################  
# Buildout to develop adhocracy 
#
############################################################################## 

[buildout]
extends = 
# we need zope only to make zope.testrecorder run, if you have problems, just delete it
    http://good-py.appspot.com/release/zope/2.13.10
    buildout_common.cfg
    buildouts/codecheck.cfg
    buildouts/mailserver.cfg
parts += 
    adhocpy
    omelette 
    test
    coveragereport
    sphinxbuilder
    instance 
    testrecorder 

# Pull und update each package to get the newest versions
always-checkout = true

##############################################################################  
# Aditional eggs
##############################################################################
 
eggs +=  
    adhocracy [test]
    Babel
    ipython
    ipdb
    Werkzeug
    WebError

##############################################################################  
#Override settings from buildout_common.cfg    
##############################################################################  

[adhocracy]
debug = True
smtp_port = 8825

[ports]
mailserver_port = ${adhocracy:smtp_port}  

[adhocracy_code]
branch = geo

[domains]
main = adhocracy.lan
# generate internal urls with port 5001 to be able to work without a
# proxy (e.g. apache with ReverseProxy, see /etc/vhost.ini.in)
# on a port != 80
main.force_port = True

[paster]
eggs += ZopeSkel

##############################################################################  
# Ease development
##############################################################################  
 
# python with all required eggs 
[adhocpy]   
recipe = zc.recipe.egg
eggs =  ${buildout:eggs}
interpreter = adhocpy
scripts = adhocpy

# unified directory structure of installed eggs (./parts/omelette)
[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${buildout:eggs} 

##############################################################################  
# Documentation 
##############################################################################  

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/src/adhocracy/docs
build = ${buildout:directory}/docs
eggs = ${buildout:eggs}

##############################################################################  
# Testing documentation stuff   
##############################################################################  

[test]
recipe = pbp.recipe.noserunner
eggs = ${buildout:eggs}
       ipdbplugin
# -s: Don't capture stdout (any stdout output will be
#     printed immediately). Necessary to use pdb during test
# -q: be less verbose
defaults = 
   -s -q --with-pylons=${buildout:directory}/src/adhocracy/test.ini ${buildout:directory}/src/adhocracy

[coveragereport]
recipe = zc.recipe.egg
eggs = createcoverage    


[instance]
recipe = plone.recipe.zope2instance
user = test:test
http-address = 8088
eggs =
  zope.testrecorder
zcml =
  zope.testrecorder

[testrecorder]
# start your local adhocracy server 
# run bin/testrecorder_start to open you browser
# submit the local adhocracy server url
# record a use_case/acceptance test run - http://plone.org/documentation/kb/testing/zope-testrecorder
recipe = plone.recipe.command
command = echo 'xdg-open "http:localhost:${instance:http-address}/++resource++recorder/index.html"' > bin/testrecorder.sh
          chmod a+x bin/testrecorder.sh
