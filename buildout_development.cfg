#This buildout is for local development.

[buildout]

extends = 
# we need zope only to make zope.testrecorder run, if you have problems, just delete it
    http://good-py.appspot.com/release/zope/2.13.10
    versions.cfg
    buildout_common.cfg
    codecheck.cfg
    mailserver.cfg

parts += 
    adhocracy_unthemed_conf
    solr_download
    solr
    rabbitmq 
    rabbitmq_conf 
    libevent
    memcached
    memcached_setup
    omelette
    supervisor
    test
    coveragereport
    sphinxbuilder
    instance 
    testrecorder 

# Pull und update each package to get the newest versions
always-checkout = true

##############################################################################  
# Aditional eggs
##############################################################################
 
eggs +=  
#ease development
    adhocracy [test]
    Babel
    ipython
    ipdb
    Werkzeug
    WebError
    adhocracy.offenekommune_theme

##############################################################################  
#Override settings from buildout_common.cfg    
##############################################################################  

[adhocracy]
debug = True
sqlalchemy.url = postgresql://adhocracy:adhoc@localhost:${ports:postgres}/adhocracy
smtp_port = 8825

[ports]
mailserver_port = ${adhocracy:smtp_port}  

[adhocracy_code]
branch = geo
#add custom theme package
#diazo_theme_rules_dir = ${buildout:directory}/src/adhocracy.wordpressbasic_theme/adhocracy/wordpressbasic_theme
diazo_theme_rules_dir = ${buildout:directory}/src/adhocracy.offenekommune_theme/adhocracy/offenekommune_theme

[sources]
# change to `git ssh://git@bitbucket.org` urls to pull via ssh
adhocracy = git https://github.com/liqd/adhocracy branch=${adhocracy_code:branch}
#add custom theme package
adhocracy.offenekommune_theme = git https://github.com/liqd/adhocracy.offenekommune_theme
adhocracy.wordpressbasic_theme = git https://github.com/liqd/adhocracy.wordpressbasic_theme

[domains]
main = adhocracy.lan
# generate internal urls with port 5001 to be able to work without a
# proxy (e.g. apache with ReverseProxy, see /etc/vhost.ini.in)
# on a port != 80
main.force_port = True
#add custom wordpress backend
blog = offenekommune.wordpress.liqd.net


[paster]
eggs += ZopeSkel
 
##############################################################################  
#Additional server conifg without diazo themeing   
##############################################################################  

[ports]
main_unthemed = 5002

[domains]
main_unthemed.force_port = True
 
[adhocracy_unthemed_conf] 
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/etc/unthemed.ini.in
output = ${buildout:directory}/etc/unthemed.ini

##############################################################################  
# Set up supervisor to run it all
##############################################################################

[supervisor]
programs =
    0 postgresql (environment=LD_LIBRARY_PATH="${geos:location}/lib:${proj:location}/lib") ${buildout:directory}/bin/postgres [-D ${buildout:directory}/var/postgresql/data]
    10 rabbitmq ${buildout:directory}/bin/rabbitmq-server                 
    20 memcached ${memcached:location}/bin/memcached [-l 127.0.0.1 -p ${ports:memcached} -U ${ports:memcached}] 
    30 solr ${buildout:directory}/bin/solr-instance [fg]
    40 adhocracy_background ${buildout:directory}/bin/paster [--plugin=adhocracy background -c ${buildout:directory}/etc/adhocracy.ini]
#    45 adhocracy (environment=LD_LIBRARY_PATH="${geos:location}/lib") ${buildout:directory}/bin/paster [serve ${buildout:directory}/etc/adhocracy.ini]

##############################################################################  
# Set up SysV init script
##############################################################################

[sysv_conf]
user = adhocracy
 
##############################################################################  
# Testing stuff   
##############################################################################  

[test]
recipe = pbp.recipe.noserunner
eggs = ${buildout:eggs}
       ipdbplugin
# -s: Don't capture stdout (any stdout output will be
#     printed immediately). Necessary to use pdb during test
# -q: be less verbose
defaults = 
   -s -q --with-pylons=${buildout:directory}/src/adhocracy/test.ini ${buildout:directory}/src/adhocracy

[coveragereport]
recipe = zc.recipe.egg
eggs = createcoverage    

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/src/adhocracy/docs
build = ${buildout:directory}/docs
eggs = ${buildout:eggs}

[instance]
recipe = plone.recipe.zope2instance
user = test:test
http-address = 8088
eggs =
  zope.testrecorder
zcml =
  zope.testrecorder

[testrecorder]
# start your local adhocracy server 
# run bin/testrecorder_start to open you browser
# submit the local adhocracy server url
# record a use_case/acceptance test run - http://plone.org/documentation/kb/testing/zope-testrecorder
recipe = plone.recipe.command
command = echo 'xdg-open "http:localhost:${instance:http-address}/++resource++recorder/index.html"' > bin/testrecorder.sh
          chmod a+x bin/testrecorder.sh
